<Page x:Class="DeviceControlPanel.Pages.Systems.ConfigPage"
      xmlns:converters="clr-namespace:DeviceControlPanel.Classes.Converters"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:DeviceControlPanel.Pages.Systems"
      mc:Ignorable="d" 
      d:DesignHeight="600" d:DesignWidth="800"
      Title="ConfigPage">
    <Page.Resources>
        <converters:ConnectionStateToColorConverter x:Key="ConnectionStateConverter" />
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="TabItem.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#F0F0F0" Offset="0.0"/>
            <GradientStop Color="#E5E5E5" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TabItem.Static.Border" Color="#ACACAC"/>
        <LinearGradientBrush x:Key="TabItem.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#ECF4FC" Offset="0.0"/>
            <GradientStop Color="#DCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#FFA8B5C1"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#D9D9D9"/>
        <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
        <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF"/>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="6,2,6,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                            <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" Margin="0">
                                <Border x:Name="innerBorder" BorderBrush="{StaticResource TabItem.Selected.Border}" BorderThickness="0" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Margin="-1" Opacity="0"/>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,0,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,0,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="0,-2,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,-2,0"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <Grid>
        <TabControl x:Name="tabControl" Background="{x:Null}">
            <TabItem Header="Basic Settings" BorderBrush="{x:Null}" Width="120" Height="35" Padding="10,5" Background="{x:Null}">
                <Grid Margin="0,2,0,-2">
                    <GroupBox Header="Transaction Settings" HorizontalAlignment="Left" VerticalAlignment="Top" Height="112" Width="260" Margin="10,50,0,0">
                        <StackPanel Margin="5" VerticalAlignment="Top">
                            <CheckBox x:Name="chkEncryptDownload" Content="Encrypt downloaded data" HorizontalAlignment="Left" Margin="0,0,-137,0" VerticalAlignment="Top"/>
                            <CheckBox x:Name="chkDeleteDeviceTrasaction" Content="Delete device transaction after download" HorizontalAlignment="Left" Margin="0,0,-137,0" VerticalAlignment="Top"/>
                            <CheckBox x:Name="chkSyncDateTime" Content="Synchronize DateTime after download" HorizontalAlignment="Left" VerticalAlignment="Top" IsChecked="True"/>
                            <CheckBox x:Name="chkLiveTapCapture" Content="Enable live tap capture" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                            <CheckBox x:Name="chkLiveTapCapture_Copy" Content="Create daily time capure log file" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="System Settings" HorizontalAlignment="Left" VerticalAlignment="Top" Height="112" Width="260" Margin="10,167,0,0">
                        <StackPanel Margin="5" VerticalAlignment="Top">
                            <CheckBox x:Name="chkEncryptDownload1" Content="Start on Windows™ startup" HorizontalAlignment="Left" Margin="0,0,-137,0" VerticalAlignment="Top" IsChecked="True"/>
                            <CheckBox x:Name="chkDeleteDeviceTrasaction1" Content="Run as Administrator" HorizontalAlignment="Left" Margin="0,0,-137,0" VerticalAlignment="Top" IsChecked="True"/>
                            <CheckBox x:Name="chkSyncDateTime1" Content="Register as service" HorizontalAlignment="Left" VerticalAlignment="Top" IsChecked="True"/>
                            <CheckBox x:Name="chkLiveTapCapture1" Content="Separate access web server" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                            <CheckBox x:Name="chkLiveTapCapture_Copy1" Content="Enable system account registration" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Date and Time Settings" HorizontalAlignment="Left" VerticalAlignment="Top" Height="152" Width="260" Margin="10,284,0,0">
                        <StackPanel Margin="5" VerticalAlignment="Top">
                            <StackPanel Orientation="Vertical">
                                <TextBlock x:Name="textBlock" TextWrapping="Wrap" Text="Date Format"/>
                                <ComboBox x:Name="cmbDateFormat"/>
                            </StackPanel>
                            <StackPanel Orientation="Vertical">
                                <TextBlock x:Name="textBlock1" TextWrapping="Wrap" Text="Time Format"/>
                                <ComboBox x:Name="cmbTimeFormat"/>
                            </StackPanel>
                            <StackPanel Orientation="Vertical">
                                <TextBlock x:Name="textBlock2" TextWrapping="Wrap" Text="Duration Format"/>
                                <ComboBox x:Name="cmbDurationFormat"/>
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Network Settings" HorizontalAlignment="Left" VerticalAlignment="Top" Height="497" Width="260" Margin="275,50,0,0">
                        <StackPanel Margin="5" VerticalAlignment="Top">
                            <Border Height="50" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="10">
                                <TextBlock x:Name="txtNetStatus" TextWrapping="Wrap" Text="DISCONNECTED" Margin="0" VerticalAlignment="Center" FontSize="26.667" FontFamily="Poppins Light"/>
                            </Border>
                            <StackPanel Orientation="Vertical">
                                <TextBlock x:Name="textBlock3" TextWrapping="Wrap" Text="MAC Address"/>
                                <ComboBox x:Name="cmbMAC"/>
                            </StackPanel>
                            <StackPanel Orientation="Vertical">
                                <TextBlock x:Name="textBlock4" TextWrapping="Wrap" Text="IPv4 Address"/>
                                <ComboBox x:Name="cmbIPv4"/>
                            </StackPanel>
                            <StackPanel Orientation="Vertical">
                                <TextBlock x:Name="textBlock5" TextWrapping="Wrap" Text="Gateway"/>
                                <ComboBox x:Name="cmbGateway"/>
                            </StackPanel>
                            <StackPanel Orientation="Vertical">
                                <TextBlock x:Name="textBlock6" TextWrapping="Wrap" Text="DNS"/>
                                <ComboBox x:Name="cmbDNS"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0,10,0,5">
                                <CheckBox x:Name="chkUseProxy" Content="Use Proxy"/>
                                <CheckBox x:Name="chkUseVPN" Content="Use VPN"/>
                            </StackPanel>
                            <StackPanel Orientation="Vertical">
                                <TextBlock x:Name="textBlock8" TextWrapping="Wrap" Text="Proxy Type"/>
                                <ComboBox x:Name="cmbDateFormat6" IsEnabled="{Binding IsChecked, ElementName=chkUseProxy}"/>
                            </StackPanel>
                            <StackPanel Orientation="Vertical">
                                <TextBlock x:Name="textBlock9" TextWrapping="Wrap" Text="Proxy Address"/>
                                <ComboBox x:Name="cmbDateFormat7" IsEnabled="{Binding IsChecked, ElementName=chkUseProxy}"/>
                            </StackPanel>
                            <StackPanel Orientation="Vertical">
                                <TextBlock x:Name="textBlock10" TextWrapping="Wrap" Text="Proxy Port"/>
                                <ComboBox x:Name="cmbDateFormat8" IsEnabled="{Binding IsChecked, ElementName=chkUseProxy}"/>
                            </StackPanel>
                            <StackPanel Orientation="Vertical">
                                <TextBlock x:Name="textBlock11" TextWrapping="Wrap" Text="Use VPN"/>
                                <ComboBox x:Name="cmbDateFormat9" IsEnabled="{Binding IsChecked, ElementName=chkUseVPN}"/>
                            </StackPanel>
                            <StackPanel Orientation="Vertical">
                                <TextBlock x:Name="textBlock12" TextWrapping="Wrap" Text="VPN Type"/>
                                <ComboBox x:Name="cmbDateFormat10" IsEnabled="{Binding IsChecked, ElementName=chkUseVPN}"/>
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>
                    <Button x:Name="btnSave" Content="Save" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="126" Height="35"/>
                    <Button x:Name="btnRestoreDefault" Content="Restore Default" HorizontalAlignment="Left" Margin="144,10,0,0" VerticalAlignment="Top" Width="126" Height="35"/>
                </Grid>
            </TabItem>
            <TabItem Header="Communication" BorderBrush="{x:Null}" Width="120" Height="35" Padding="10,5" Background="{x:Null}">
                <Grid/>
            </TabItem>
            <TabItem Header="Logs" HorizontalAlignment="Left" Height="35" VerticalAlignment="Top" Width="120" BorderBrush="{x:Null}" Padding="10,5" Background="{x:Null}">
                <Grid/>
            </TabItem>
        </TabControl>

    </Grid>
</Page>
